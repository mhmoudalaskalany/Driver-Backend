<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Driver.Api</name>
    </assembly>
    <members>
        <member name="T:Driver.Api.Controllers.V1.Base.BaseController">
            <inheritdoc />
        </member>
        <member name="T:Driver.Api.Controllers.V1.DriversController">
            <summary>
            Drivers Controller
            </summary>
        </member>
        <member name="M:Driver.Api.Controllers.V1.DriversController.#ctor(Driver.Application.Services.Driver.IDriverService)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Driver.Api.Controllers.V1.DriversController.GetAsync(System.Guid)">
            <summary>
            Get Driver by Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:Driver.Api.Controllers.V1.DriversController.GetAllAsync">
            <summary>
            Get All Drivers
            </summary>
            <returns></returns>
        </member>
        <member name="M:Driver.Api.Controllers.V1.DriversController.AddAsync(Driver.Common.DTO.Driver.AddDriverDto)">
            <summary>
            Add Driver
            </summary>
            <returns></returns>
        </member>
        <member name="M:Driver.Api.Controllers.V1.DriversController.UpdateAsync(Driver.Common.DTO.Driver.UpdateDriverDto)">
            <summary>
            Update Driver
            </summary>
            <returns></returns>
        </member>
        <member name="M:Driver.Api.Controllers.V1.DriversController.DeleteAsync(System.Guid)">
            <summary>
            Delete Driver By Id
            </summary>
            <returns></returns>
        </member>
        <member name="T:Driver.Api.Extensions.ConfigureDependencyExtension">
            <summary>
            Dependency Extensions
            </summary>
        </member>
        <member name="M:Driver.Api.Extensions.ConfigureDependencyExtension.RegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Register Extensions
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Driver.Api.Extensions.ConfigureDependencyExtension.RegisterDbConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add Register Db Configuration
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:Driver.Api.Extensions.ConfigureDependencyExtension.RegisterAutoMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            register auto-mapper
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Driver.Api.Extensions.ConfigureDependencyExtension.AddLocalizationServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register localization
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Driver.Api.Extensions.ConfigureDependencyExtension.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register Application Services Dependencies
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Driver.Api.Extensions.ConfigureDependencyExtension.RegisterApiMonitoring(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add Health Checks
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Driver.Api.Extensions.ConfigureDependencyExtension.RegisterInfrastructure(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register Infrastructure
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Driver.Api.Extensions.ConfigureDependencyExtension.RegisterApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register Api Versioning
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Driver.Api.Extensions.ConfigureDependencyExtension.RegisterLowerCaseUrls(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Lower Case Urls
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Driver.Api.Extensions.ConfigureDependencyExtension.RegisterSwaggerConfig(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Swagger Config
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:Driver.Api.Extensions.ConfigureMiddlewareExtension">
            <summary>
            Pipeline Extensions
            </summary>
        </member>
        <member name="M:Driver.Api.Extensions.ConfigureMiddlewareExtension.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            General Configuration Method
            </summary>
            <param name="app"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:Driver.Api.Extensions.ConfigureMiddlewareExtension.ConfigureCors(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure Cors
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Driver.Api.Extensions.ConfigureMiddlewareExtension.MigrateDatabase(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Migrate Database
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Driver.Api.Extensions.ConfigureMiddlewareExtension.SwaggerConfig(Microsoft.AspNetCore.Builder.IApplicationBuilder,Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            User Swagger
            </summary>
            <param name="app"></param>
            <param name="provider"></param>
        </member>
        <member name="T:Driver.Api.Extensions.Swagger.Headers.LanguageHeader">
            <summary>
            Language Header
            </summary>
        </member>
        <member name="M:Driver.Api.Extensions.Swagger.Headers.LanguageHeader.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Apply Filter
            </summary>
            <param name="operation"></param>
            <param name="context"></param>
        </member>
        <member name="T:Driver.Api.Extensions.Swagger.Options.SwaggerConfigureOptions">
            <summary>
              Configures the Swagger generation options.
            </summary>
            <remarks>
              This allows API versioning to define a Swagger document per API version after the <see
              cref="T:Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider"/> service has been resolved from the service container.
            </remarks>
        </member>
        <member name="M:Driver.Api.Extensions.Swagger.Options.SwaggerConfigureOptions.#ctor(Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
              Initializes a new instance of the <see cref="T:Driver.Api.Extensions.Swagger.Options.SwaggerConfigureOptions"/> class.
            </summary>
            <param name="provider">
              The <see cref="T:Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider">provider</see> used to generate Swagger documents.
            </param>
        </member>
        <member name="M:Driver.Api.Extensions.Swagger.Options.SwaggerConfigureOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <inheritdoc/>
        </member>
        <member name="T:Driver.Api.MiddleWares.ExceptionMiddleware">
            <summary>
            Global Exception Middleware
            </summary>
        </member>
        <member name="M:Driver.Api.MiddleWares.ExceptionMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="next"></param>
            <param name="loggerFactory"></param>
            <param name="configuration"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Driver.Api.MiddleWares.ExceptionMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoke
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:Driver.Api.MiddleWares.LanguageMiddleware">
            <summary>
            Language Middleware
            </summary>
        </member>
        <member name="M:Driver.Api.MiddleWares.LanguageMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Constructor
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Driver.Api.MiddleWares.LanguageMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoke
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:Driver.Api.MiddleWares.MiddlewareExtensions">
            <summary>
            Extend Middleware
            </summary>
        </member>
        <member name="M:Driver.Api.MiddleWares.MiddlewareExtensions.ConfigureCustomMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:Driver.Api.MiddleWares.Swagger.SwaggerBasicAuthMiddleware">
            <summary>
            Swagger Middleware
            </summary>
        </member>
        <member name="M:Driver.Api.MiddleWares.Swagger.SwaggerBasicAuthMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Driver.Api.MiddleWares.Swagger.SwaggerBasicAuthMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoke
            </summary>
            <returns></returns>
        </member>
        <member name="M:Driver.Api.MiddleWares.Swagger.SwaggerBasicAuthMiddleware.IsAuthorized(System.String,System.String)">
             <summary>
            
             </summary>
             <param name="username"></param>
             <param name="password"></param>
             <returns></returns>
        </member>
        <member name="M:Driver.Api.MiddleWares.Swagger.SwaggerBasicAuthMiddleware.IsLocalRequest(Microsoft.AspNetCore.Http.HttpContext)">
             <summary>
            
             </summary>
             <param name="context"></param>
             <returns></returns>
        </member>
        <member name="T:Driver.Api.Program">
            <summary>
            Start Point
            </summary>
        </member>
        <member name="M:Driver.Api.Program.Main(System.String[])">
            <summary>
            Kick Off
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Driver.Api.Program.CreateHostBuilder(System.String[])">
            <summary>
            Web Host Builder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Driver.Api.Startup">
            <summary>
            Start Up Class
            </summary>
        </member>
        <member name="M:Driver.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Driver.Api.Startup.Configuration">
            <summary>
            Public Configuration Property
            </summary>
        </member>
        <member name="M:Driver.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure Dependencies
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Driver.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            Configure Pipeline
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="provider"></param>
        </member>
    </members>
</doc>
